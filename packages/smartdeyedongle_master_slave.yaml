#These entries below define data fields to store the TimeOfUse values on home_assistant side
#The automation will take a change in value and populate the value on the inverter accordingly
input_datetime:
  timezone1_time:
    name: Timezone 1 Time
    has_date: false
    has_time: true
  timezone2_time:
    name: Timezone 2 Time
    has_date: false
    has_time: true
  timezone3_time:
    name: Timezone 3 Time
    has_date: false
    has_time: true
  timezone4_time:
    name: Timezone 4 Time
    has_date: false
    has_time: true
  timezone5_time:
    name: Timezone 5 Time
    has_date: false
    has_time: true
  timezone6_time:
    name: Timezone 6 Time
    has_date: false
    has_time: true

template:
  - sensor:
      - name: "deyeinvertermaster_solar_power_used"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_pv') | float(1) - states('sensor.deyeinvertermaster_solar_power_battery_charge') | float(1)) |round(1) }}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertermaster_solar_power_battery_charge"
        state: "{{ ( states('sensor.deyeinvertermaster_summary_day_battery_charge') | float(1) - states('sensor.deyeinvertermaster_summary_day_battery_charge_grid') | float(1)) | round(1) }}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      #essential = inverter_power_175 + grid_power_169  - aux_power_166
      - name: "deyeinvertermaster_essential_load"
        state: "{{ (states('sensor.deyeinvertermaster_inverter_output_power') |float(0)  + (states('sensor.deyeinvertermaster_grid_load_l1') |float(0) - states('sensor.deyeinvertermaster_aux_output_power') |float(0) )) | round(0)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      #nonessential = grid_ct_power_172 - grid_power_167 (L1)
      - name: "deyeinvertermaster_non_essential_load"
        state: "{{ (states('sensor.deyeinvertermaster_grid_power_ct_clamp') |float(0)  - (states('sensor.deyeinvertermaster_grid_load_l1') |float(0))) | round(0)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: "deyeinvertermaster_priority_charge_or_load"
        state: |
          {% if is_state('select.deyeinvertermaster_energy_management_model', 'Battery Priority Mode') %}
            off
          {% else %}
            on
          {% endif %}

      - name: deyeinvertermaster_battery_charge_grid_power
        unit_of_measurement: "kW"
        state_class: measurement
        device_class: power
        state: >-
          {% if states('sensor.deyeinvertermaster_inverter_output_power')|float < 0.0 %}
          {{ (states('sensor.deyeinvertermaster_battery_output_power') | float(4) | abs ) * 0.001  }}
          {% else %}
          0.0
          {% endif %}

      ####################Slave Inverter ##################################

      - name: "deyeinverterslave_solar_power_used"
        state: "{{ (states('sensor.deyeinverterslave_summary_day_pv') | float(0) - states('sensor.deyeinverterslave_summary_day_battery_charge') | float(0)) |round(1) }}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      #essential = deyeinverterslave_power_175 + grid_power_169  - aux_power_166
      - name: "deyeinverterslave_essential_load"
        state: "{{ (states('sensor.deyeinverterslave_deyeinverterslave_output_power') |float(0)  + (states('sensor.deyeinverterslave_grid_load_l1') |float(0) - states('sensor.deyeinverterslave_aux_output_power') |float(0) )) | round(0)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      #nonessential = grid_ct_power_172 - grid_power_167 (L1)
      - name: "deyeinverterslave_non_essential_load"
        state: "{{ (states('sensor.deyeinverterslave_grid_power_ct_clamp') |float(0)  - (states('sensor.deyeinverterslave_grid_load_l1') |float(0))) | round(0)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: "deyeinverterslave_priority_charge_or_load"
        state: |
          {% if is_state('select.deyeinverterslave_energy_management_model', 'Battery Priority Mode') %}
            off
          {% else %}
            on
          {% endif %}

      - name: deyeinverterslave_battery_charge_grid_power
        unit_of_measurement: "kW"
        state_class: measurement
        device_class: power
        state: >-
          {% if states('sensor.deyeinverterslave_inverter_output_power')|float < 0.0 %}
          {{ (states('sensor.deyeinverterslave_battery_output_power') | float(4) | abs ) * 0.001  }}
          {% else %}
          0.0
          {% endif %}

      #################### Combined System view  ( Master + Slave )##################################
      - name: "deyeinvertercombined_battery_soc"
        state: |-
          {% if (has_value('sensor.deyeinvertermaster_battery_soc') and has_value('sensor.deyeinverterslave_battery_soc')) %}
          {{  (states('sensor.deyeinvertermaster_battery_soc') |float(1)  + (states('sensor.deyeinverterslave_battery_soc') |float(1)))  / 2.0 }}
          {% else %}
          {{0.0}}
          {% endif %}
        availability: >-
          {{ (has_value('sensor.deyeinvertermaster_battery_soc') and has_value('sensor.deyeinverterslave_battery_soc')) }}
        unit_of_measurement: "%"
        device_class: battery

      - name: "deyeinvertercombined_battery_voltage"
        state: "{{ (states('sensor.deyeinvertermaster_battery_voltage') |float(1)  + (states('sensor.deyeinverterslave_battery_voltage') |float(1)))  / 2.0 }}"
        unit_of_measurement: "V"
        device_class: voltage

      - name: "deyeinvertercombined_summary_day_battery_charge"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_battery_charge') |float(0)  + (states('sensor.deyeinverterslave_summary_day_battery_charge') |float(0))) | round(1)}}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_day_load"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_load') |float(0)  + (states('sensor.deyeinverterslave_summary_day_load') |float(0))) | round(1) }}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing
        availability: >-
          {{ (has_value('sensor.deyeinvertermaster_summary_day_load') and has_value('sensor.deyeinverterslave_summary_day_load')) }}

      - name: "deyeinvertercombined_summary_day_battery_discharge"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_battery_discharge') |float(0)  + (states('sensor.deyeinverterslave_summary_day_battery_discharge') |float(0))) | round(1)}}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_day_pv"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_pv') |float(0)  + (states('sensor.deyeinverterslave_summary_day_pv') |float(0))) | round(1)}}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing
        availability: >-
          {{ (has_value('sensor.deyeinvertermaster_summary_day_pv') and has_value('sensor.deyeinverterslave_summary_day_pv')) }}

      - name: "deyeinvertercombined_summary_day_pv1"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_pv1') |float(0)  + (states('sensor.deyeinverterslave_summary_day_pv1') |float(0))) | round(1)}}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_day_pv2"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_pv2') |float(0)  + (states('sensor.deyeinverterslave_summary_day_pv2') |float(0))) | round(1)}}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_day_pv3"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_pv3') |float(0)  + (states('sensor.deyeinverterslave_summary_day_pv3') |float(0))) | round(1)}}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_day_pv4"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_pv4') |float(0)  + (states('sensor.deyeinverterslave_summary_day_pv4') |float(0))) | round(1)}}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_day_grid_import_buy"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_grid_import_buy') |float(0))}}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_day_grid_import_buy_half"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_grid_import_buy') |float(0) / 2.0)}}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_day_grid_export_sell"
        state: "{{ (states('sensor.deyeinvertermaster_summary_day_grid_export_sell') |float(0) / 2.0)}}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_total_pv"
        state: "{{ (states('sensor.deyeinvertermaster_summary_total_pv') |float(3)  + (states('sensor.deyeinverterslave_summary_total_pv') |float(3))) | round(4)}}"
        unit_of_measurement: "MWh"
        device_class: energy
        state_class: total_increasing
        availability: >-
          {{ (has_value('sensor.deyeinvertermaster_summary_total_pv') and has_value('sensor.deyeinverterslave_summary_total_pv')) }}

      - name: "deyeinvertercombined_summary_total_load"
        state: "{{ (states('sensor.deyeinvertermaster_summary_total_load') |float(3)  + (states('sensor.deyeinverterslave_summary_total_load') |float(3))) | round(4)}}"
        unit_of_measurement: "MWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_total_grid_import_buy"
        state: "{{ (states('sensor.deyeinvertermaster_summary_total_grid_import_buy') |float(3)) | round(4)}}"
        unit_of_measurement: "MWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_total_grid_export_sell"
        state: "{{ (states('sensor.deyeinvertermaster_summary_total_grid_export_sell') |float(3)) | round(4)}}"
        unit_of_measurement: "MWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_total_battery_discharge"
        state: "{{ (states('sensor.deyeinvertermaster_summary_total_battery_discharge') |float(3)  + (states('sensor.deyeinverterslave_summary_total_battery_discharge') |float(3))) | round(4)}}"
        unit_of_measurement: "MWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_summary_total_battery_charge"
        state: "{{ (states('sensor.deyeinvertermaster_summary_total_battery_charge') |float(3)  + (states('sensor.deyeinverterslave_summary_total_battery_charge') |float(3))) | round(4)}}"
        unit_of_measurement: "MWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_essential_load"
        state: "{{ (states('sensor.deyeinvertermaster_essential_load') |float(0) + (states('sensor.deyeinverterslave_essential_load') |float(0))) | round(1)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: "deyeinvertercombined_grid_load"
        state: "{{ (states('sensor.deyeinvertermaster_grid_load') |float(0) + (states('sensor.deyeinverterslave_grid_load') |float(0))) | round(1)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: "deyeinvertercombined_inverter_output_power"
        state: "{{ (states('sensor.deyeinvertermaster_inverter_output_power') |float(0)  + (states('sensor.deyeinverterslave_inverter_output_power') |float(0))) | round(1)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: "deyeinvertercombined_battery_output_power"
        state: "{{ (states('sensor.deyeinvertermaster_battery_output_power') |float(0)  + (states('sensor.deyeinverterslave_battery_output_power') |float(0))) | round(1)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: "deyeinvertercombined_solar_power_used"
        state: "{{ (states('sensor.deyeinvertermaster_solar_power_used') |float(0)  + (states('sensor.deyeinverterslave_solar_power_used') |float(0))) | round(1)}}"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing

      - name: "deyeinvertercombined_pv_power"
        state: "{{ (states('sensor.deyeinvertermaster_pv_power') |float(0)  + (states('sensor.deyeinverterslave_pv_power') |float(0))) | round(1)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement
        availability: >-
          {{ (has_value('sensor.deyeinvertermaster_pv_power') and has_value('sensor.deyeinverterslave_pv_power')) }}

      - name: "deyeinvertercombined_pv1_power"
        state: "{{ (states('sensor.deyeinvertermaster_pv1_power') |float(0)  + (states('sensor.deyeinverterslave_pv1_power') |float(0))) | round(1)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: "deyeinvertercombined_pv2_power"
        state: "{{ (states('sensor.deyeinvertermaster_pv2_power') |float(0)  + (states('sensor.deyeinverterslave_pv2_power') |float(0))) | round(1)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: "deyeinvertercombined_pv3_power"
        state: "{{ (states('sensor.deyeinvertermaster_pv3_power') |float(0)  + (states('sensor.deyeinverterslave_pv3_power') |float(0))) | round(1)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: "deyeinvertercombined_pv4_power"
        state: "{{ (states('sensor.deyeinvertermaster_pv4_power') |float(0)  + (states('sensor.deyeinverterslave_pv4_power') |float(0))) | round(1)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: "deyeinvertercombined_grid_power_ct_clamp"
        state: "{{ states('sensor.deyeinvertermaster_grid_power_ct_clamp') |float(0) + states('sensor.deyeinverterslave_grid_power_ct_clamp') |float(1) }}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: "deyeinvertercombined_battery_output_current"
        state: "{{ (states('sensor.deyeinvertermaster_battery_output_current') |float(0)  + (states('sensor.deyeinverterslave_battery_output_current') |float(0))) | round(1)}}"
        unit_of_measurement: "A"
        device_class: current
        state_class: measurement

      - name: "deyeinvertercombined_non_essential_load"
        state: "{{ (states('sensor.deyeinvertermaster_non_essential_load') |float(0)  - (states('sensor.deyeinverterslave_non_essential_load') |float(0))) | round(1)}}"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement

      - name: deyeinvertercombined_battery_charge_grid_power
        unit_of_measurement: "kW"
        state_class: measurement
        device_class: power
        state: >-
          {% if states('sensor.deyeinvertercombined_inverter_output_power')|float < 0.0 %}
          {{ (states('sensor.deyeinvertercombined_battery_output_power') | float(4) | abs ) * 0.001  }}
          {% else %}
          0.0
          {% endif %}

      #################### Allows Dongle to sync inverter time from HA ##################################
      - name: "deyeinvertermaster_ha_time"
        state: |
          {{ now().strftime('%y%m%d%H%M') }}

sensor:
  - platform: integration
    name: deyeinvertermaster_summary_total_battery_charge_grid
    source: sensor.deyeinvertermaster_battery_charge_grid_power
    method: left

  - platform: integration
    name: deyeinverterslave_summary_total_battery_charge_grid
    source: sensor.deyeinverterslave_battery_charge_grid_power
    method: left

utility_meter:
  master_energy_battery_charge_grid:
    name: deyeinvertermaster_summary_day_battery_charge_grid
    source: sensor.deyeinvertermaster_summary_total_battery_charge_grid
    cycle: daily

  slave_energy_battery_charge_grid:
    name: deyeinverterslave_summary_day_battery_charge_grid
    source: sensor.deyeinverterslave_summary_total_battery_charge_grid
    cycle: daily
